class LZA:
  def __init__(self, bitstring):
    self.bitstring = bitstring
    self.code_list = []
    self.content = []

  def encode(self):
    self.__read_bin()

  def __read_bin(self):
    max_size = 16
    symbol = ""
    prefix = None
    least = None
    precode = None
    
    for char in self.bitstring:
      symbol += char
      if not symbol in self.content:
        self.content.append(symbol)
        least = symbol[-1]
        prefix = symbol[:-1]
        print("l", least)
        print("p", prefix)
        try:
          prefix = bin(self.content.index(prefix))[2:]
        except ValueError:
          prefix = ""
        if prefix == "": prefix = "0" * (max_size - 1)
        self.code_list.append(prefix + least)
        
        
        symbol = ""
        #prefix = None
        

    print(self.content)
    print(self.code_list)

    
    
    

def main():

  print('Hello, world!')

  b = "010110100101"
  o_lz = LZA(b)
  o_lz.encode()

if __name__ == "__main__":
  main()
